[{"content":"## The story behind the Airflow Breeze tool\nInitially, we started contributing to this fantastic open-source project [Apache Airflow] with a team of three which then grew to five. When we kicked it off a year ago, I realized pretty soon where the biggest bottlenecks and areas for improvement in terms of productivity were. Even with the help of our client, who provided us with a “homegrown” development environment it took us literally days to set it up and learn some basics.\n\nThat is how the journey to increased productivity in Apache Airflow began. The result? The Airflow Breeze open-source tool. Jarek Potiuk, an Airflow Committer, will tell you all about it.\n\nYou can learn [how and why it’s a \"Breeze\" to Develop Apache Airflow on Polidea blog](https://www.polidea.com/blog/its-a-breeze-to-develop-apache-airflow/?utm_source=ApacheAirflowBlog&utm_medium=Npaid&utm_campaign=Blog&utm_term=Article&utm_content=AAB_NOP_BLG_ART_AB_001).\n","url":"Its-a-breeze-to-develop-apache-airflow","title":"It's a \"Breeze\" to develop Apache Airflow","linkTitle":"It's a \"Breeze\" to develop Apache Airflow","author":"Jarek Potiuk","twitter":"higrys","github":"potiuk","linkedin":"jarekpotiuk","description":"A Principal Software Engineer's journey to developer productivity. Learn how Jarek and his team speeded up and simplified Airflow development for the community.","tags":["Development"],"date":"2019-11-22T00:00:00.000Z"},{"content":"�PNG\r\n\u001a\n\u0000\u0000\u0000\rIHDR\u0000\u0000\u0006>\u0000\u0000\u0002�\b\u0006\u0000\u0000\u0000\u0007�X\u0014\u0000\u0000\u0000\u0006bKGD\u0000�\u0000�\u0000�����\u0000\u0000\u0000\tpHYs\u0000\u0000\u000b\u0013\u0000\u0000\u000b\u0013\u0001\u0000��\u0018\u0000\u0000\u0000\u0007tIME\u0007�\u0007\u001f\u00142:�\b�\u0000\u0000 \u0000IDATx���{|����ל2\u0013�L\u0012r�����@0@�H\u0000%*\u0002����VQ�!��j��.���Z�����ݭ��Zz�m���ҽ��*T\u0014D�r\b\u0016��\u0002\u0004B\u0002IHH\b9'�\f�ɜ~$@@H��\t��|<�Gf��뺾����|��2؞�U\u0010\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011�A���O]�:F%������������\f\u0015\n|�����������Ȑ��������������\f\u0019\n|�����������Ȑ��������������\f\u0019\n|������������5��G\u001f���\n|������������5�L��b�\u000f�@\u001eXZ}\u001d�\u0016�5\u001aq�-�\u000e��j��j\u000b�i\u000b�m6�1�9m�p:Ċ�d���\u0010���\u0000�v�J������������ wa���G\u001f�����\u00074��\u000e�pKY)�+�Ͼ\u0017�H�\u0000�f\u0013�\u0010+-6\u001bMv;uÇS\u001c;���$��N�\"A��P|��1VTbl/Ui\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0019�.5�U��������\u0003y�#\\�������Ԅ!\u0018\u0004\f�,\u001d�\bT�G�oa��It��\u0018\f���opX(���\u0004��bܷ\u001fs�q�\u0018\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011�A���O]�:\u0003>�G�}8�?�\u0018�^7�����1\u0010�@\\k\u000b/�����X\\x\u0000��Y�\f���a\u001a��P\b��\u001fP�\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0019\u0002\u0006���\r��x��\u000b8\u00147\n�O\u0007\u0014\u0003\u0004a©Z^�h\u001d�����}\u0005CB��|\u0013����1�ϧ� \"\"\"\"\"\"\"\"\"\"2\u0004\u0018\u0007ˁ�\u000f\u000f�%��5�:���\r]e\u0000�uz��G\u001b�ۊCX����\bڬ��O'8�~n\u001b��\u0002\u001f\"\"\"\"\"\"\"\"\"\"\"C�q0\u001dL���sw��g))��b0�ӟo�iwͥ\u0017���N�N0:�\u000f�\u0018.s�,\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0019������\u001c��w\u001e`kZ\u001a>c�\u000f�����r~��\u00168?�\u0011�Z��Ȇ�\u0011_�;�\u001f\u0004\u0005>DDDDDDDDDDD�\u0004�`<���\u0010����Æ��^'��\u0013�����<�9y�}�\tߴL�QQ\u0017_��\u0005���\u0012\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0019\n�������yf�䥥�3��L�.o0\u00180\u0018 �\u0000?�8�?wTb6\u0019��<��Q`���!\u0006�\u001f�W=>DDDDDDDDDDD�\u0002�`>8������a\u001e:\u001d��<�\u001bw�eڞ�1_l2r�\u0019Cȹ��[�)�\u0012��\bz\rkx;����ۣ�?H��I�\\�Y�\u001f���\u0005��Ȇg�0v�[L��\u0002w/���O�?\u0017��[�68���7<����\u001d�ז���|S�H��Ų�*~y��3�6��8@�K)#\"\"\"\"\"\"\"\"\"r9\u0006u�#\b�L����\f���;�.\u0016��\"\u000b��o\\�Y�\u0018b�`9�+�\u0014\f�����\u000e|��\u0011b��ѩ��<>��\u0014\u001e�h罽\u0017�@���h�~�N��\u0011�0󭙳�w���>��['�9\u0015HRɓ\u000b��\u001eANz\"9逷�m�hG�����Bf~R�g\b�#:��\u0019i�\u001b\u0019F�̈́������7\u000b�Y��UQ\u001e,L\u000e\u0016��≔(\u0012pQPV�\u000b;�)��ו1�\u0017￙��ky����Ț2�\u001d�\u0003���|��N�#2x��tһ��\u001bʶsׁH^��{[�q~�}����w�(Z�1�4�\u0012�\u0010HM\u001eǣ�\u0012Ɏ�\u0013c���jc_E\u0005+\u000f�R�ຈ�����y�Gg���T��MxZ�X�k7˫����h�\u0006>\fF3I�f3*|\n�`�{��\b����\u0018\u0002A��?����\b\u0012$$>\u001cC���[-V�I����\tҍ--\u0018.��<n\"\u000f�6sd�&�O��=��\u0019�w/�{.��k+zMZ�ه�\u0007\u001163�N���\u000e�\u000f\u0018�\r\b|\f\u001f�\u001b�M!�L�\u0007�8]N\n�*Yy����4�X\u0013��8?����ܱ�\"\r`�(�LMgqB\u0014)�\u0010��N������\u0010�˜����j2���X��N��u�zㇼP\u0005V���i�x6�F��M<^l��\u0005Sybn6!��Y��ǆ-\u0011,Κ���\b�CϤK#���cy��ߪUT��S�3�a#gb\u001c��r\n��\u0011�,df��\u0013,\u001c�n$���zC\u0004\u000b���Lq�96��\u0005��AAc?\u001aoM��,䵴�so�;ip��{p\u001f�\u001cs\u000eɠ���DΌ�yq���;����F7wo������^�B<5E<�5@�5~�X�و�12e�p;\u000e{?߃~�o�\rw��\u0014;�;?���_�ϐ(\u0016���=\\w�����\f\"Xr�,����VSǶ\u00067\u001eG<\u000b���7)�y�Y��3^9я44F��9,u��N���\u0014�W��@\u0011��\u0015�\u0015\u0011\u0011\u0011\u0011�! |\u001c��=�LK�=nd\u001cO�6\u000b���X�z���\u000b�w�r���\u000fx��\u0015n�P{R�\r��G0\bcF�L\\䴳A���ޘ��=?%��(Svzf\rlI��\u0015+�����\u000e��R{ߏ���T�\u0017���̉L���\n\u000e��6�\u0007&O䁘��T�c�\u000b��\u001a>�\r��#�wxu�m�:9��;�©�n�[&������P����Hc�9�{o��s���ఁ���*yk�&^:�1���{�i��=�~v�J\u000b���\u001e�Jr��V�TI�\u0010`�$^{�A\u001e��@�\u000e�2`\u0019�f��M�{=`�\u0010\u001f\u0015��t^�+�_l��U�U\u0018\u0016�^\u0017���\u0006g|2�B�Y�����x^^��\\_\r+�}�/�\\x�ad���ɜ�H\t����\f�GW\u0013���dGRt���H\u0000\u001b�\u0013'�bf\"�(gU��ڪG�u�zea�ͳy>��W�m&����\u0010\u0007�'N�'�΄\u000f>ay��x�Fp�֑�[\u001cK�%�Wv�\u0007>\u0012�g��47/���N�\u0018˳��#�UΊ\u0013v\u0016$Œ=�f^������W\u0016=��<���6�\u0010;��'��M�q6~��f}A}��\u0001�X�d�b\u001e�I$�TCn��b\u001f�ҕ��B~ǵ����n��\u0010}�'G�\u000b�+���+ocY�\u0012B^e\u000b�i�$\u001c.��k:7��4�]��H\u001d��`�\t\u000b�n���M�<�����Sd:o,��]^�*K<�FG���Y8�obE��'��\u0015~�S�]`4\u0011�\"�q<g\u0002�y��a���\u0012\u0011\u0011\u0011\u0011�k[BR�٠ǹ۫(\u0016&�Yy�����B\u001e�V�վ��\u001e���*�{_��$#\u0010\u0018��9�\u0002\u001f\u0006��1#g�h�\u0011N\u0003�@W\u0006X\f\u0004�\u00060@G�\b�^�S&\u001e܆��!$n\u0004���\u0010\fRg\u001b�s����)}�kK\u000b\u0006�����C\u0012y #\u0002��<ު�p�`\t�o�ƃ�#y)���\u001b�9D���G�j^ݰ����\u001c)>�����\\l\u0005?Z���\u001d�\u001c\u000f��`e;��{\u001f�2m��o��G\u001bi����ٳ�����\\�'~T]����ܛ\u0018O\u0004�]�\f[<3b}�t\fgFR\u0014�t\u001f_L\"�\u000e\u001f�wT\f\\У�\u0002�<����\"�jm!����\u0005sX��L��rΎF\u0012���x7�|\\�'l\u000e�R�>t�B1�=m\n\u000b��<�!���m+N�jNQ�2��F\u001b\u000e�\u001a�\u0012�&��\r�d:B�禬�0?�QJр=�jcJb4\t!6\u0012&�k�MHH#\u0001�\u001f\u000b;7�C�\\ޝ2�\u001dS\u0000o\r/|���ڑ��dG[(8��U'�\u0017v7�~�\u000eڜ","url":"Simple_dag"},{"content":"","url":"_index","title":"Blog","linkTitle":"Blog","menu":{"main":{"weight":25}}},{"content":"Airflow 1.10.10 contains 199 commits since 1.10.9 and includes 11 new features, 43 improvements, 44 bug fixes, and several doc changes.\n\n**Details**:\n\n* **PyPI**: [https://pypi.org/project/apache-airflow/1.10.10/](https://pypi.org/project/apache-airflow/1.10.10/)\n* **Docs**: [https://airflow.apache.org/docs/1.10.10/](https://airflow.apache.org/docs/1.10.10/)\n* **Changelog**: [http://airflow.apache.org/docs/1.10.10/changelog.html](http://airflow.apache.org/docs/1.10.10/changelog.html)\n\nSome of the noteworthy new features (user-facing) are:\n\n- [Allow user to chose timezone to use in the RBAC UI](https://github.com/apache/airflow/pull/8046)\n- [Add Production Docker image support](https://github.com/apache/airflow/pull/7832)\n- [Allow Retrieving Airflow Connections & Variables from various Secrets backend](http://airflow.apache.org/docs/1.10.10/howto/use-alternative-secrets-backend.html)\n- [Stateless Webserver using DAG Serialization](http://airflow.apache.org/docs/1.10.10/dag-serialization.html)\n- [Tasks with Dummy Operators are no longer sent to executor](https://github.com/apache/airflow/pull/7880)\n- [Allow passing DagRun conf when triggering dags via UI](https://github.com/apache/airflow/pull/7312)\n\n### Allow user to chose timezone to use in the RBAC UI\n\nBy default the Web UI will show times in UTC. It is possible to change the timezone shown by using the menu in the top\n right (click on the clock to activate it):\n\n**Screenshot**:\n![Allow user to chose timezone to use in the RBAC UI](rbac-ui-timezone.gif)\n\nDetails: https://airflow.apache.org/docs/1.10.10/timezone.html#web-ui\n\n**Note**: This feature is only available for the RBAC UI (enabled using `rbac=True` in `[webserver]` section in your `airflow.cfg`).\n\n### Add Production Docker image support\n\nThere are brand new production images (alpha quality) available for Airflow 1.10.10. You can pull them from the\n[Apache Airflow Dockerhub](https://hub.docker.com/r/apache/airflow) repository and start using it.\n\nMore information about using production images can be found in https://github.com/apache/airflow/blob/master/IMAGES.rst#using-the-images. Soon it will be updated with\ninformation how to use images using official helm chart.\n\nTo pull the images you can run one of the following commands:\n\n- `docker pull apache/airflow:1.10.10-python2.7`\n- `docker pull apache/airflow:1.10.10-python3.5`\n- `docker pull apache/airflow:1.10.10-python3.6`\n- `docker pull apache/airflow:1.10.10-python3.7`\n- `docker pull apache/airflow:1.10.10` (uses Python 3.6)\n\n### Allow Retrieving Airflow Connections & Variables from various Secrets backend\n\nFrom Airflow 1.10.10, users would be able to get Airflow Variables from Environment Variables.\n\nDetails: https://airflow.apache.org/docs/1.10.10/concepts.html#storing-variables-in-environment-variables\n\nA new concept of Secrets Backend has been introduced to retrieve Airflow Connections and Variables.\n\nFrom Airflow 1.10.10, users can retrieve Connections & Variables using the same sy","url":"airflow-1.10","title":"Apache Airflow 1.10.10","linkTitle":"Apache Airflow 1.10.10","author":"Kaxil Naik","twitter":"kaxil","github":"kaxil","linkedin":"kaxil","description":"We are happy to present Apache Airflow 1.10.10","tags":["release"],"date":"2020-04-09T00:00:00.000Z"},{"content":"Airflow 1.10.8 contains 160 commits since 1.10.7 and includes 4 new features, 42 improvements, 36 bug fixes, and several doc changes.\n\nWe released 1.10.9 on the same day as one of the Flask dependencies (Werkzeug) released 1.0 which broke Airflow 1.10.8.\n\n**Details**:\n\n* **PyPI**: [https://pypi.org/project/apache-airflow/1.10.9/](https://pypi.org/project/apache-airflow/1.10.9/)\n* **Docs**: [https://airflow.apache.org/docs/1.10.9/](https://airflow.apache.org/docs/1.10.9/)\n* **Changelog (1.10.8)**: [http://airflow.apache.org/docs/1.10.8/changelog.html#airflow-1-10-8-2020-01-07](http://airflow.apache.org/docs/1.10.8/changelog.html#airflow-1-10-8-2020-01-07)\n* **Changelog (1.10.9)**: [http://airflow.apache.org/docs/1.10.9/changelog.html#airflow-1-10-9-2020-02-10](http://airflow.apache.org/docs/1.10.9/changelog.html#airflow-1-10-9-2020-02-10)\n\nSome of the noteworthy new features (user-facing) are:\n\n- [Add tags to DAGs and use it for filtering in the UI (RBAC only)](https://github.com/apache/airflow/pull/6489)\n- [New Executor: DebugExecutor for Local debugging from your IDE](http://airflow.apache.org/docs/1.10.9/executor/debug.html)\n- [Allow passing conf in \"Add DAG Run\" (Triggered Dags) view](https://github.com/apache/airflow/pull/7281)\n- [Allow dags to run for future execution dates for manually triggered DAGs (only if `schedule_interval=None`)](https://github.com/apache/airflow/pull/7038)\n- [Dedicated page in documentation for all configs in airflow.cfg](https://airflow.apache.org/docs/1.10.9/configurations-ref.html)\n\n### Add tags to DAGs and use it for filtering in the UI\n\nIn order to filter DAGs (e.g by team), you can add tags in each dag. The filter is saved in a cookie and can be reset by the reset button.\n\nFor example:\n\nIn your Dag file, pass a list of tags you want to add to DAG object:\n\n```python\ndag = DAG(\n    dag_id='example_dag_tag',\n    schedule_interval='0 0 * * *',\n    tags=['example']\n)\n```\n\n**Screenshot**:\n![Add filter by DAG tags](airflow-dag-tags.png)\n\n**Note**: This feature is only available for the RBAC UI (enabled using `rbac=True` in `[webserver]` section in your `airflow.cfg`).\n\n\n## Special Note / Deprecations\n\n### Python 2\nPython 2 has reached end of its life on Jan 2020. Airflow Master no longer supports Python 2.\nAirflow 1.10.* would be the last series to support Python 2.\n\nWe strongly recommend users to use Python >= 3.6\n\n### Use Airflow RBAC UI\nAirflow 1.10.9 ships with 2 UIs, the default is non-RBAC Flask-admin based UI and Flask-appbuilder based UI.\n\nThe Flask-AppBuilder (FAB) based UI is allows Role-based Access Control and has more advanced features compared to\nthe legacy Flask-admin based UI. This UI can be enabled by setting `rbac=True` in `[webserver]` section in your `airflow.cfg`.\n\nFlask-admin based UI is deprecated and new features won't be ported to it. This UI will still be the default\nfor 1.10.* series but would no longer be available from Airflow 2.0\n\n\n## List of Contributors\n\nAccording to git shortlog, the f","url":"airflow-1.10.8-1.10","title":"Apache Airflow 1.10.8 & 1.10.9","linkTitle":"Apache Airflow 1.10.8 & 1.10.9","author":"Kaxil Naik","twitter":"kaxil","github":"kaxil","linkedin":"kaxil","description":"We are happy to present the new 1.10.8 and 1.10.9 releases of Apache Airflow.","tags":["release"],"date":"2020-02-23T00:00:00.000Z"},{"content":"# Apache Airflow Survey 2019\n\nApache Airflow is [growing faster than ever](https://www.astronomer.io/blog/why-airflow/).\nThus, receiving and adjusting to our users’ feedback is a must. We created\n[survey](https://forms.gle/XAzR1pQBZiftvPQM7) and we got **308** responses.\nLet’s see who Airflow users are, how they play with it, and what they miss.\n\n# Overview of the user\n\n**What best describes your current occupation?**\n\n|                         |No.|  %   |\n|-------------------------|---|------|\n|Data Engineer            |194|62.99%|\n|Developer                | 34|11.04%|\n|Architect                | 23|7.47% |\n|Data Scientist           | 19|6.17% |\n|Data Analyst             | 13|4.22% |\n|DevOps                   | 13|4.22% |\n|IT Administrator         |  2|0.65% |\n|Machine Learning Engineer|  2|0.65% |\n|Manager                  |  2|0.65% |\n|Operations               |  2|0.65% |\n|Chief Data Officer       |  1|0.32% |\n|Engineering Manager      |  1|0.32% |\n|Intern                   |  1|0.32% |\n|Product owner            |  1|0.32% |\n|Quant                    |  1|0.32% |\n\n\n**In your day to day job, what do you use Airflow for?**\n\n|                                                      |No.|  %   |\n|------------------------------------------------------|---|------|\n|Data processing (ETL)                                 |298|96.75%|\n|Artificial Intelligence and Machine Learning Pipelines| 90|29.22%|\n|Automating DevOps operations                          | 64|20.78%|\n\nAccording to the survey, most of the Airflow users are the “data” people. Moreover,\n28.57% uses Airflow to both ETL and ML pipelines meaning that those two fields\nare somehow connected. Only five respondents use Airflow for DevOps operations only,\nThat means that other 59 people who use Airflow for DevOps stuff use it also for\nETL / ML  purposes.\n\n**How many active DAGs do you have in your largest Airflow instance?**\n\n|       |No.|  %   |\n|-------|---|------|\n|0-20   |115|37.34%|\n|21-40  | 65|21.10%|\n|41-60  | 44|14.29%|\n|61-100 | 28|9.09% |\n|101-200| 28|9.09% |\n|201-300|  7|2.27% |\n|301-999|  8|2.60% |\n|1000+  | 13|4.22% |\n\n\nThe majority of users do not exceed 100 active DAGs per Airflow instance. However,\nas we can see there are users who exceed thousands of DAGs with a maximum number 5000.\n\n**What is the maximum number of tasks that you have used in one DAG?**\n\n|       |No.|  %   |\n|-------|---|------|\n|0-10   | 61|19.81%|\n|11-20  | 60|19.48%|\n|21-30  | 31|10.06%|\n|31-40  | 21|6.82% |\n|41-50  | 26|8.44% |\n|51-100 | 36|11.69%|\n|101-200| 28|9.09% |\n|201-500| 21|6.82% |\n|501+   | 24|11.54%|\n\n\nThe given maximum number of tasks in a single DAG was 10 000 (!). The number of tasks\ndepends on the purposes of a DAG, so it’s rather hard to say if users have “simple”\nor “complicated” workflows.\n\n**When onboarding new members to Airflow, what is the biggest problem?**\n\n|                                                               |No.|  %   |\n|----------------------------------------------------","url":"airflow-survey","title":"Airflow Survey 2019","linkTitle":"Airflow Survey 2019","author":"Tomek Urbaszek","twitter":"Nuclearriot","github":"nuclearpinguin","linkedin":"tomaszurbaszek","description":"Receiving and adjusting to our users’ feedback is a must. Let’s see who Airflow users are, how they play with it, and what they miss.","tags":["community","survey","users"],"date":"2019-12-11"},{"content":"�PNG\r\n\u001a\n\u0000\u0000\u0000\rIHDR\u0000\u0000\u0006/\u0000\u0000\u0002�\b\u0006\u0000\u0000\u0000n]��\u0000\u0000\u0000\u0006bKGD\u0000�\u0000�\u0000�����\u0000\u0000\u0000\tpHYs\u0000\u0000\u000b\u0013\u0000\u0000\u000b\u0013\u0001\u0000��\u0018\u0000\u0000\u0000\u0007tIME\u0007�\u0007\u001f\u00145\"�%�\u0013\u0000\u0000 \u0000IDATx���{|�՝����d2\u0013�L\u0012&\u0004Bb�\u0006�\\B�D�\\��m!�\u0005�b�+��\u0015�����Jm���U���Z��Y�ߺ���ؕ�\u0016P!��RB\u0014!\u0010$\u0010��\\HBB2a�L&3��c\u0002\u0004�$P�a}?\u001f�<��|os��{�{��{�1X\u001f�g?\"\"\"\"\"\"\"\"\"\"\"\"A����cT2�����������H0Q�BDDDDDDDDDDD���\u0017\"\"\"\"\"\"\"\"\"\"\"\u0012T\u0014�\u0010\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011��\u0012r�w���ʼO\u000e�1\u001aq��9\u0011j��j��\u001a��\u001a�+$\u0004wH\b'�fN�Z�3�>�c����\u0001�ǝ�\u0001\"\"\"\"\"\"\"\"\"\"\"A�\u0007/\\�ffWW1����k~��\f�\u001bb�\u0019j��j�#<�ֈ\b\u000eō�4)�=c\u0013?�@�D\u0018}y�1��c<^�\u001c \"\"\"\"\"\"\"\"\"\"\u0012d.y�!*���u\u001b���e�::0���\u001f�\u001f��>��>�N'���\u0000�?�1F�1*��9��\u0013&�\u0013\u0012��`��}�G��7k&�\b�\u001a�ξ����������H\u0010�,s^t�Gp�w��{W��g\u0018�\u0010\f�0\u0010���3\u001b�L�\u001f�/����佰��?,��i9����\u000f\u0006�Og_DDDDDDDDDD$\b]�\t��FD�����q�\u0018�?�5\f���GZx���|w�G�ޗ?4��\u001b��\u001f\u001b\u001b�\u001f\u0003���싈���������\u0004!���y[D$�]|7[2��k\u001c�0P\u0006`D��_��6_�1\u0016��=0�V\u000b}ӧ�\b?�\r�_�\u000b\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011\u0011� e��\u0007�m���׿����\u000b[���\u000fv�������C�L��?�~�\u001b^\f^�y!\"\"\"\"\"\"\"\"\"\"\u0012���p\u0010��6�׷�`KF\u0006}��\u001f������jx�Ո�wf0�o��w]\u001e�G\u0006�k\f����\u0017\"\"\"\"\"\"\"\"\"\"\"A�\u0018,\u0007�\u0013\u001a�?\u0016|���&\f{\u001d�ۋ��˃'�X�n:���D_N6~�����y��a�DDDDDDDDDDD��1�\u000e�؈p\u001e\\p+[3��3��5�\u0006]�`0`0@\u0018>\u001e�i�W=����xn��?f\f\u0018�=���ϋ���\u0017\"\"\"\"\"\"\"\"\"\"\"�($�\u000e�\u0013\u0012��^�\u001d�:\u0011�-$�kK�$磍��k�mk\b���\u001f��]G�HJ៣�\u001944��>�g^\u001e3�N*����y�����7\\g-\u0010q-o/���]�2u]\u001d�AvaM��?\u0017�䫱Vh�ʌ?����s\u0019��5�ެ\u001et]��0�5!�eQ\r<�I8\u000ff[�P��\"�RFDDDDDDDDD�܂.x�\u0007F��r�D���=���~����;gw\u00141�Z0�O��0�}$�\u0019z''z��\u0017\u0003zf\u0018��=5\u0001��\u000fWx\u001awO\b��g�\"������z|��C\b_�1�[G�x���y���#�d�69�\u0017£���Ĭ,��̶+�CP��\u0005�\u0014��\u0019����\u001fx�l�I,����ё$XM�]N�[\u001aye�!6\u001c�(+\u0007\u000b��E��ro��D��UW���\u001a�����\u0018������or�'\u0017�#K�\fJ����k�l��;\u0003��Ț�,�����V�`_\f/\u000f��F\u001c;��y��\u0019Tl�Ȋ��\u0004�/\u0004�S3�;3�<{8��^���쩫cՁ*�\u0014 \u0017\u0011\u0011\u0011\u0011\u00119C�؉�S^:yQ&�]���p\u0017/4���`\u0010T�\u000b�1��13\u0019\u00135\u0005�?�Z�5�W��\f\u0006��y��/!�sU��\u0013�\u0010�a�\u0004�]f\u000b��M�;Ĥ���N\fg��\u001d?�;ǆpp�f�N��of�#e�nj\u0007.���o�\r��֐>\\}\u0010m\r\u0001g\u0013�߾�7��\u0011_��ED&�m\n�'�����tP�PϪ}�����Ē�˦y��������шe��xj\u0016�\u0012����b���p��w��\u000bՎ�o(��L��V�,�:��\\\u0014nz�G\u001b�b2�����t+\u0015{7sϡp\u001e�?�{o�#tG)�;�ذ9�E�SX�\u0014MB��tig��=�Pw�[�*��r�����2kB<�C5�]񣳙�������\u001chl����6C4\u000bR��N����ʢ�\u001d���}\u0018\r�&f�Z�K\u0019��_��r��IQ�\u001eV\u001cv��\f�\\:&f]w\u0003��\u000b��?��q��\u001f��olk���\u001d�\\����+����+�:���2j�(��\u0011���\u001a\f+}���)��|�{\u000e\\�\u001b�P;�2L\u0014\u001dh�����{\u0019D�xN>ˢ�lkne�Q\u0017n[\u0002\u000bR�̝dg�TVm�ΊO���F;�\u0017��\u0012���t��EE[\u0003k�UPئ��������\u000f\u0010�ɯ��E����\u001b\u0013��\u001b�q�y3�����pv��).\n�YǣM�s{Ǘ�=)h�\u0017~?\\5�\u0006�crN\u0005.N՟\t��o����O��뽓k`M\u001es:k\u0018��7�[�\u001f�>�~\fF�GZ>�\fs�'0�\u0016�.��N�t�<�;F���\u0001��=lTD\u000eo/�K���x>�F��\u001cKm�_8r��|�\u00040�ՏM��\u001dL��9\u001a�C��z�L\u001e���x�\u0015��S{��W���Ӈ�pՍ����t\u0015��9�O^-Q<���㟓]���J��\u001fN+$��\u001e��;[�&����y�N����7��6�d&�\u001eϢ�Y�\\\u0010�\u0013oog�\u0019\u0017����N�Uߌ#!��a�\u0014�\fx;,�g\u0016�qs_3��|�\u0013\u001dNܖH��Ʊt֍�����\u0007��\u0011�īg�\u001fy1T\u001cn'1\u0006�Jބ�<���\\jX�~��\u0019�~�?�23���<\u0012�ʊm�S��Co���\u0013��93`ݻ��q\t?�\u0011\u001c]�����\u001a��$�V_����qy�:��3oma�\u00030Ʊ��LҜ5��4���q�����=�r����Ew�~����n��p��M���h�\u0017�����ǰ 9����$f��)\u001av^\u001c�\\�<�tR�s�'����6/Ğ�Qq܉�\u0019:�׆un�X�\u0016���N�3RI<PA�%�l��\u0019,��I��V\u001c�`?\u0013f�^��}�C|�ͪ@���,�� \u0006WM\u0005��\t�\u001d\u001bÒ9�86lf尾'�T����\u0007�`4\u0011k�3��L\u001e�z\"y[7��\u001a=�$\"\"\"\"\"W���S����+;\u000b��Y�o�����|g[c�}g@\u001d���\u0017T��<ۓ����8?A\u0011�0\u0018L\\5:���k�\u0004`�\u0005\u0012�l�o4�\u0001z�F�E?gB�6B�nB�G\u0012\u0012\u0013\u0001~?��\u0011<��5^K�2������p�9�wh\u0012wL��մ�W[�ԖWR;-�;�G�tQ��7�\u001f7����'}�<���\u001cj���O�;�6\u001e���'�w����Z߸�V\u000e��[ocu����\u001d��I;]���93�Ǿc'f���:v\u001e�έI\tD�\u0015\bHX\u0013�.��Ξ\b�K�Ce��J\"���ޒ��\u0017��H{O8i�P\u001b�:)�k�a�M,�K�hS\r�F�\bKdA��w7��\u001dy\u0013\u000b��)��d�`\"/g\n���v)[O��8�h>BY�d\u0016\u0018��\b4~%&O��i�d�B��Eu�\u0001~^RE�e{0�ʔ�X\u0012C�$N8ݠ���A\"�7\u000ev�Ϗ�nf͔��L\u0001<�<�^)�C�\u0005\u0019cȋ5S��^V7�/�jg��\u0012�\u001dc�k\u0002���\u0019��por4�L^�ڏ��t7�����Ĥ�H~\u0016scñx\u001c�","url":"airflow-ui"},{"content":"The brand [new Airflow website](https://airflow.apache.org/) has arrived! Those who have been following the process know that the journey to update [the old Airflow website](https://airflow.readthedocs.io/en/1.10.6/) started at the beginning of the year.\nThanks to sponsorship from the Cloud Composer team at Google that allowed us to\ncollaborate with [Polidea](https://www.polidea.com/) and with their design studio [Utilo](https://utilodesign.com/), and deliver an awesome website.\n\nDocumentation of open source projects is key to engaging new contributors in the maintenance,\ndevelopment, and adoption of software. We want the Apache Airflow community to have\nthe best possible experience to contribute and use the project. We also took this opportunity to make the project\nmore accessible, and in doing so, increase its reach.\n\nIn the past three and a half months, we have updated everything: created a more efficient landing page,\nenhanced information architecture, and improved UX & UI. Most importantly, the website now has capabilities\nto be translated into many languages. This is our effort to foster a more inclusive community around\nApache Airflow, and we look forward to seeing contributions in Spanish, Chinese, Russian, and other languages as well!\n\nWe built our website on Docsy, a platform that is easy to use and contribute to. Follow\n[these steps](https://github.com/apache/airflow-site/blob/master/README.md) to set up your environment and\nto create your first pull request. You may also use\nthe new website for your own open source project as a template.\nAll of our [code is open and hosted on Github](https://github.com/apache/airflow-site/tree/master).\n\nShare your questions, comments, and suggestions with us, to help us improve the website.\nWe hope that this new design makes finding documentation about Airflow easier,\nand that its improved accessibility increases adoption and use of Apache Airflow around the world.\n\nHappy browsing!\n","url":"announcing-new-website","title":"New Airflow website","linkTitle":"New Airflow website","author":"Aizhamal Nurmamat kyzy","description":"We are thrilled about our new website!","tags":["Community"],"date":"2019-12-11"},{"content":"Apache Airflow is a platform to programmatically author, schedule, and monitor workflows.\nA workflow is a sequence of tasks that processes a set of data. You can think of workflow as the\npath that describes how tasks go from being undone to done. Scheduling, on the other hand, is the\nprocess of planning, controlling, and optimizing when a particular task should be done.\n\n### Authoring Workflow in Apache Airflow.\nAirflow makes it easy to author workflows using python scripts. A [Directed Acyclic Graph](https://en.wikipedia.org/wiki/Directed_acyclic_graph)\n(DAG) represents a workflow in Airflow. It is a collection of tasks in a way that shows each task's\nrelationships and dependencies. You can have as many DAGs as you want, and Airflow will execute\nthem according to the task's relationships and dependencies. If task B depends on the successful\nexecution of another task A, it means Airflow will run task A and only run task B after task A.\nThis dependency is very easy to express in Airflow. For example, the above scenario is expressed as\n```python\ntask_A >> task_B\n```\nAlso equivalent to\n```python\ntask_A.set_downstream(task_B)\n```\n![Simple Dag](Simple_dag.png)\n\nThat helps Airflow to know that it needs to execute task A before task B. Tasks can have far more complex\nrelationships to each other than expressed above and Airflow figures out how and when to execute the tasks following\ntheir relationships and dependencies.\n![Complex Dag](semicomplex.png)\n\nBefore we discuss the architecture of Airflow that makes scheduling, executing, and monitoring of\nworkflow an easy thing, let us discuss the [Breeze environment](https://github.com/apache/airflow/blob/master/BREEZE.rst).\n\n### Breeze Environment\nThe breeze environment is the development environment for Airflow where you can run tests, build images,\nbuild documentations and so many other things. There are excellent\n[documentation and video](https://github.com/apache/airflow/blob/master/BREEZE.rst) on Breeze environment.\nPlease check them out. You enter the Breeze environment by running the ``./breeze`` script. You can run all\nthe commands mentioned here in the Breeze environment.\n\n### Scheduler\nThe scheduler is the component that monitors DAGs and triggers those tasks whose dependencies have\nbeen met. It watches over the DAG folder, checking the tasks in each DAG and triggers them once they\nare ready. It accomplishes this by spawning a process that runs periodically(every minute or so)\nreading the metadata database to check the status of each task and decides what needs to be done.\nThe metadata database is where the status of all tasks are recorded. The status can be one of running,\n success, failed, etc.\n\nA task is said to be ready when its dependencies have been met. The dependencies include all the data\nnecessary for the task to be executed. It should be noted that the scheduler won't trigger your tasks until\nthe period it covers has ended. If a task's ``schedule_interval`` is ``@daily``, the scheduler tr","url":"apache-airflow-for-new-comers","title":"Apache Airflow For Newcomers","linkTitle":"Apache Airflow For Newcomers","author":"Ephraim Anierobi","twitter":"ephraimbuddy","github":"ephraimbuddy","description":"","tags":["Community"],"date":"2020-08-17","draft":false},{"content":"Is it possible to create an organization that delivers tens of projects used by millions, nearly no one is paid for doing their job, and still, it has been fruitfully carrying on for more than 20 years? Apache Software Foundation proves it is possible. For the last two decades, ASF has been crafting a model called the Apache Way—a way of organizing and leading tech open source projects. Due to this approach, which is strongly based on the “community over code” motto, we can enjoy such awesome projects like Apache Spark, Flink, Beam, or Airflow (and many more).\n\nAfter this year’s ApacheCon, Polidea’s engineers talked with Committers of Apache projects, such as—Aizhamal Nurmamat kyzy, Felix Uellendall, and Fokko Driesprong—about insights to what makes the ASF such an amazing organization.\n\nYou can read the [insights on the Polidea blog](https://www.polidea.com/blog/apachecon-europe-2019-thoughts-and-insights-by-airflow-committers/?utm_source=ApacheAirflowBlog&utm_medium=Npaid&utm_campaign=Blog&utm_term=Article&utm_content=AAB_NOP_BLG_ART_APC_001).\n","url":"apache-con-europe-2019-thoughts-and-insights-by-airflow-committers","title":"ApacheCon Europe 2019 — Thoughts and Insights by Airflow Committers","linkTitle":"ApacheCon Europe 2019 — Thoughts and Insights by Airflow Committers","author":"Polidea","description":"Here come some thoughts by Airflow committers and contributors from the ApacheCon Europe 2019. Get to know the ASF community!","tags":["Community"],"date":"2019-11-22"},{"content":"## Documenting local development environment of Apache Airflow\n\nFrom Sept to November, 2019 I have been participating in a wonderful initiative, [Google Season of Docs](https://developers.google.com/season-of-docs).\n\nI had a pleasure to contribute to the Apache Airflow open source project as a technical writer.\nMy initial assignment was an extension to the github-based Contribution guide.\n\nFrom the very first days I have been pretty closely involved into inter-project communications\nvia emails/slack and had regular 1:1s with my mentor, Jarek Potiuk.\n\nI got infected with Jarek’s enthusiasm to ease the on-boarding experience for\nAirflow contributors. I do share this strategy and did my best to improve the structure,\nlanguage and DX. As a result, Jarek and I extended the current contributor’s docs and\nended up with the Contributing guide navigating the users through the project\ninfrastructure and providing a workflow example based on a real-life use case;\nthe Testing guide with an overview of a complex testing infrastructure for Apache Airflow;\nand two guides dedicated to the Breeze dev environment and local virtual environment\n(my initial assignment).\n\nI’m deeply grateful to my mentor and Airflow developers for their feedback,\npatience and help while I was breaking through new challenges\n(I’ve never worked on an open source project before),\nand for their support of all my ideas! I think a key success factor for any contributor\nis a responsive, supportive and motivated team, and I was lucky to join such\na team for 3 months.\n\nDocuments I worked on:\n\n* [Breeze development environment documentation](https://github.com/apache/airflow/blob/master/BREEZE.rst)\n* [Local virtualenv environment documentation](https://github.com/apache/airflow/blob/master/LOCAL_VIRTUALENV.rst)\n* [Contributing guide](https://github.com/apache/airflow/blob/master/CONTRIBUTING.rst)\n* [Testing guide](https://github.com/apache/airflow/blob/master/TESTING.rst)\n","url":"documenting-using-local-development-environments","title":"Documenting using local development environment","linkTitle":"Documenting using local development environment","author":"Elena Fedotova","github":"efedotova","linkedin":"elena-fedotova-039294110","description":"The story behind documenting local development environment of Apache Airflow","tags":["Development"],"date":"2019-11-22T00:00:00.000Z"},{"content":"I came across [Google Season of Docs][1] (GSoD) almost by accident, thanks to my extensive HackerNews and Twitter addiction.  I was familiar with the Google Summer of Code but not with this program.\nIt turns out it was the inaugural phase. I read the details, and the process felt a lot like GSoC except that this was about documentation.\n\n## About Me\nI have been writing tech articles on medium as well as my blog for the past 1.5 years.  Blogging helps me test my understanding of the concepts as untangling the toughest of ideas in simple sentences requires a considerable time investment.\n\nAlso, I have been working as a Software Developer for the past three years, which involves writing documentation for my projects as well. I completed my B.Tech from  IIT Roorkee. During my stay in college, I applied for GSoC once but didn’t make it through in the final list of selected candidates.\n\nI saw GSoD as an excellent opportunity to improve my technical writing skills using feedback from the open-source community. I contributed some bug fixes and features to Apache Superset and Apache Druid, but this would be my first contribution as a technical writer.\n\n## Searching for the organization\nAbout 40+ organizations were participating in the GSoD. However, there were two which came as the right choice for me in the first instant. The first one was [Apache Airflow][2] because I had already used Airflow extensively and also contributed some custom operators inside the forked version of my previous company.\n\nThe second one was [Apache Cassandra][3], on which I also had worked extensively but hadn’t done any code or doc changes.\n\nConsidering the total experience, I decided to go with the Airflow.\n\n## Project selection\nAfter selecting the org, the next step was to choose the project. Again, my previous experience played a role here, and I ended up picking the **How to create a workflow** . The aim of the project was to write documentation which will help users in creating complex as well as custom DAGs.  \nThe final deliverables were a bit different, though. More on that later.\n\nAfter submitting my application, I got involved in my job until one day, I saw a mail from google confirming my selection as a Technical Writer for the project.\n\n## Community Bonding\nGetting selected is just a beginning.  I got the invite to the Airflow slack channel where most of the discussions happened.\nMy mentor was [Ash-Berlin Taylor][4] from Apache Airflow. I started talking to my mentor to get a general sense of what deliverables were expected. The deliverables were documented in [confluence][5].\n\n- A page for how to create a DAG that also includes:\n    - Revamping the page related to scheduling a DAG\n    - Adding tips for specific DAG conditions, such as rerunning a failed task\n- A page for developing custom operators that includes:\n    - Describing mechanisms that are important when creating an operator, such as template fields, UI color, hooks, connection, etc.\n    - Describing the r","url":"experience-in-google-season-of-docs-2019-with-apache-airflow","title":"Experience in Google Season of Docs 2019 with Apache Airflow","linkTitle":"Experience in Google Season of Docs 2019 with Apache Airflow","author":"Kartik Khare","twitter":"khare_khote","github":"KKcorps","linkedin":"kharekartik","description":"","tags":["Documentation"],"date":"2019-12-20T00:00:00.000Z"},{"content":"My [Outreachy internship](https://outreachy.org) is coming to its ends which is also the best time to look back and\nreflect on the progress so far.\n\nThe goal of my project is to Extend and Improve the Apache Airflow REST API. In this post,\nI will be sharing my progress so far.\n\nWe started a bit late implementing the REST API because it took time for the OpenAPI 3.0\nspecification we were to use for the project to be merged. Thanks to [Kamil](https://github.com/mik-laj),\nwho paved the way for us to start implementing the REST API endpoints. Below are the endpoints I\nimplemented and the challenges I encountered, including how I overcame them.\n\n### Implementing The Read-Only Connection Endpoints\nThe [read-only connection endpoints](https://github.com/apache/airflow/pull/9095) were the first endpoint I implemented. Looking back,\nI can see how much I have improved.\n\nI started by implementing the database schema for the Connection table using [Marshmallow 2](https://marshmallow.readthedocs.io/en/2.x-line/).\nWe had to use Marshmallow 2 because Flask-AppBuilder was still using it and Flask-AppBuilder\nis deeply integrated to Apache Airflow. This meant I had to unlearn Marshmallow 3 that I had\n been studying before this realization, but thankfully, [Marshmallow 3](https://marshmallow.readthedocs.io/en/stable/index.html) isn't too\n different, so I was able to start using Marshmallow 2 in no time.\n\nThis first PR would have been more difficult than it was unless there had been any reference\nendpoint to look at. [Kamil](https://github.com/mik-laj) implemented a [draft PR](https://github.com/apache/airflow/pull/9045) in which I took inspiration from.\nThanks to this, It was easy for me to write the unit tests. It was also in this endpoint that\n I learned using [parameterized](https://github.com/wolever/parameterized) in unit tests :D.\n\n### Implementing The Read-Only DagRuns Endpoints\n\nThis [endpoint](https://github.com/apache/airflow/pull/9153) came with its many challenges, especially on filtering with `datetimes`.\nThis was because the `connexion` library we were using to build the REST API was not validating\ndate-time format in OpenAPI 3.0 specification, what I eventually found out, was intentional.\nConnexion dropped `strict-rfc3339` because of the later license which is not compatible with\nApache 2.0 license.\n\nI implemented a workaround on this, by defining a function called `conn_parse_datetime` in the\nAPI utils module. This was later refactored and thankfully, [Kamil](https://github.com/mik-laj)\n implemented a decorator that allowed us to have cleaner code on the views while using this function.\n\nThen we tried using `rfc3339-validator` whose license is compatible with Apache 2.0 licence but\n later discarded this because with our custom date parser we were able to use duration and\n not just date times.\n\n### Other Endpoints\nI implemented some different other endpoints. One peculiar issue I faced was because of Marshmallow 2\nnot giving error when extra fields a","url":"implementing-stable-API-for-Apache-Airflow","title":"Implementing Stable API for Apache Airflow","linkTitle":"Implementing Stable API for Apache Airflow","author":"Ephraim Anierobi","twitter":"ephraimbuddy","github":"ephraimbuddy","description":"An Outreachy intern's progress report on contributing to Apache Airflow REST API.","tags":["REST API"],"date":"2020-07-19"},{"content":"�PNG\r\n\u001a\n\u0000\u0000\u0000\rIHDR\u0000\u0000\u0006:\u0000\u0000\u0002�\b\u0006\u0000\u0000\u0000���\u0000\u0000\u0000\u0006bKGD\u0000�\u0000�\u0000�����\u0000\u0000\u0000\tpHYs\u0000\u0000\u000b\u0013\u0000\u0000\u000b\u0013\u0001\u0000��\u0018\u0000\u0000\u0000\u0007tIME\u0007�\u0007\u001f\u00140!s[E�\u0000\u0000 \u0000IDATx���yxTU���w�U)��\u0007���EB0�\u0004\"!\ba�De\u0011\u001b�\u0015u~�ϴh[�;#mݺG�E��\u0015gƦ{Ǝ=*:\u0012Z\u0004T��\u0004%D�\u0000��@\u0012\u0012�����\"U���G\u0005\b\u0011��b\u0012��z�z����{ν���=�(�O�΃\u0010B\b!�\u0010B\b!�\u0010B\b!�\u0010Q��G\u0006��R�K\b!�\u0010B\b!�\u0010B\b!�\u0010Õ\u0004:�\u0010B\b!�\u0010B\b!�\u0010B\b1lI�C\b!�\u0010B\b!�\u0010B\b!�\u0010Ö\u0004:�\u0010B\b!�\u0010B\b!�\u0010B\b1lI�C\b!�\u0010B\b!�\u0010B\b!�\u0010Ö\u0004:�\u0010B\b!�\u0010B\b!�\u0010B\b1l,]���K�C\b!�\u0010B\b!�\u0010B\b!�\u0010��� G�`�z0\u0012\u0012��@։\u0012\u001cJ%6��sZ\rmz=mz\u0003\u0016�\u0001�Z�]��F�9�\u000e�J����m4�\u0002�\u001dV93�\u0010B\b!�\u0010B\b!�\u0010B�!�wO��K���[o\rN�æ�0���)�\u0015\u0017��ĭ�.�\n�VG�^O��HÈ\u0011���� 2��a\u0011�I���c��6\u0005ee\u0015ʎ29;�\u0010B\b!�\u0010B\b!�\u0010B�!�w����\n�ӿ�\fF�\u0002�\u001d��ϛD����x\u0000E\u001fK{P\u00025�~�q�L6��@�Z�B������\u0018pf���c@y�\u0010�Sr�\b!�\u0010B\b!�\u0010B\b!�\u0010CH��\u001f\u0019�6GG�q\u0004w��\u0000�_7\u000e���d(p� ����7D�����E�Q�\\�h�\u001e�\u0001��Ix\f\u0006���喳E\b!�\u0010B\b!�\u0010B\b!�\u0018�\u0006u2�\u0011&��m\u001eGCG\u0001\u0003�X�\u0000\u000f�;S��n��C�\u0007�/�V�s��x����F\u0001N��\u0001B\b!�\u0010B\b!�\u0010B\b!�0�\u001c�\u00044�0q���쌻\u000e�r`CQ)\u0000�.\u0007���\u0013~Vy\u0014���\u001d\u001e�\u000e�)xF\u0018/n��@�\u0010B\b!�\u0010B\b!�\u0010B\b1�)�B\"��z��{;_��|�\u0015=\u001e\u001e�j7��ꮼ�F�c�\u0014<A��~p���C_\t!�\u0010B\b!�\u0010B\b!�\u0010bhQ\u000e��4����Gw�3.\u000e�r��ҵZx�l\u0005O�jл/\r\\xt:�S� 0��s��< �\u000e!�\u0010B\b!�\u0010B\b!�\u0010bXS\u000e��tj��˂\u001f�I��\u0001�㱻�t�x�\\-+��\u0017�W�pNJ�\u0013\u0018x���\u000ep��UB\b!�\u0010B\b!�\u0010B\b!�p�\u001cj\t:�c��w�\u0017\u0017�S�ƥR���B�@�\u0000\u0003n��川U�UJ\u001cӧ�\u00195\n\u0014���C�t�pH�\u000e!�\u0010B\b!�\u0010B\b!�\u0010b8S\u000f�D9�j�Ϣ����\u001ff�\bn�����[P_n�p�\u001a���a��v���1��Ϗ>�\u0018�.p:����)�P|{\u0014z�1��q#\u001f�z-0�\u0006>Y9�1��#ec%�>v�\u000f��_\u0017��� =�����?��d܁\u000fH�P���\u001f�������'�<��gs�ar��3B\b!�\u0010B\b!�\u0010B\b1\u0010C2��\u0001F���9\u0011%*\u000e$-`�G�3���A�N(J�\u000e��b�\u000f��M$��wr��;�ѣǇ2��)���Nl�\u0018��7��^-��\u0006>=p���\u001d�\u0004*�ܚ>�;F������W[�\u0019w��q�\u0017\u0017\u0018��H�$#\u0001pԱk�v4J�q\u0001o\u0018�H��\u0002�\u000f���A�,K�#s��p�\n��Jy}\r�\u0016����!��P�2�xj*\u000f�\u0004\u0012����b��SAٵ���!<�t�\u000fl��\u0013�lG��t�y��\u0002�s'ÀD�-H ��v�T��\u0005��ys �����m�m���\u001f�Q�y\u000b���\u0012�\u0010��\u001e�ұ��\u0005\u001a\tָh��s����ce\u0014J0]\b!�\u0010B\b!.\u0011\u0014��\u000bi������5�v�>VW�k��ɐ\u000bt(�j�F�`�o\u0012\n���.�\u001f���e\u0014n\u000fY��\u000bu��\u001a\u001e<h�}Q����M�ヘ\t����\\�ڊ��\f��'L��=�84q\u000e\u000b��\u0019s�\u0000�z.c��\r�}f�^���\u0004?�\u001a�����a>t\u0002>�\u0000��\u0011cy��$��g�ۅ�j�����å\u0014\\�qE\u0017��֬h�\u0015��e�e\u001a��,II`qD 1F-:O\u0017�g\u001b���(��-C�Q]�Raw�Y6.+Cl�l���A�R�6i\u001a+c�\u0014\u001f�ƃ%F����C7���]�ږ~6��cqj\u0012�\"�\b7�ϗf6\u001f:����\u0015����GT��CO��P,%\u0015\u0014\u000e�\u0011�4$'O�q\u001a��4SP�@��ѡ$ǘI\u001e\u0013����<^�<��Z\u0015\u0019\u0019�y#N{�+W\u0017M�Vr�\u001cd�I�\u000f2H��Q�1u:��\u001b��m$9>��Tڸ}W�7��~���Gv�)\u001e�׉�GOp��&�F\u00181\u001b\u0007�\u001d\f(\u0013&�º$#\u0005{>��c��\u001f��@\u0016ǩ�=�p�΃��2�cɬi�𵲫��]M6��p�G\u0007�9!���h�w~���\u0003�Ce +\u0017�a���=�n�Q�X�����4J�W\b!�\u0010B\b�\u0003�;��nJ Y����\u001f���Ӱ|���+�?�n߹�FΧ\u001by��;n���~\r�@��\u0003�GM'�҅ ǅgm��}᳄ל i����@\u001f5��i�T���\u001f�=4���(�(��-+f%�g\u001c��Tx�=�)�=q<w\u0007\u001f��\u001e��\u001e�j�$>Y���\u0017\u001f��ټ:1�S�_r��\u001b�U\u00050���\u001a\u000fu�Iy�2���@�=�''F1ά\u0007g\u0007��T���m�t�\n�gs�Ж�'f}q���屟�3������5<R�=��:�7\u001e��{�?!��ô\u000eZA��پ�?7\u0002*\rၡ,NL��\u0005!���\u0017�����p�u�ت간G�i�!���φp^�����:�\u000f~ŋ-V�:\u0013i1�,ϘM��3\u001e9>t_M��.��N��d3\u0011�\u0000z��O���H2�`m�کG�u��!s�\f��o`ծ��tҥ53c|\n��J������{<P%X�\u001a(8�o}(K&E�W>�\u0003\u001d\u0011�i�\u0016g��w��\u0002(CXy�Xb�\u0015�9md^T\bi���R�g<R2�s�^_�};�h\u0007�\u001aI����7N���\u0019��ʍ������\u001fe�z\u0019��$CUG���~��Rg+\u0005��?���l4� �|O�\u000e+\u0016�v`�\r�lCX\u001c�%����h\"�\u0015S�=\u001d�nd\u001c+��Rx�\u0001�{�����\u001b�񰪄�7�y{2�'��|l\u0015ŬՄ�\u0019�ϲYӰl�ƚ\u0001�'\\�\u0017}�#Ǭ�T\u0011d\u000e$㺱<=7���m��B�p\u0012B\b!�\u0010B\fo\u0011Q�\u0017�\u001c\u0017\u001f�\u0002�\u001fe$�p\u001fm=\rEܷ��۾��\u0019���\u001a={��IJ���*�!\u0013�P(T�\u001e9�H�\rp\u000eP��\u0019�Q�Q*@\u0001��\u0000�_�,��Bm��\r\r@�?\u0002<\u001e\u001a�><�v\u001b\u001fD'�_���(,�K'*�Frw�\u001f��<ޫ�s�H)�&O�䑼�[�u�\u0018���\u000bg\r�~����S\u001c/9͡�;y2��_��͞�6N��{�l�;�dm�����<|��6�H�1�_�\u0017�������=\u001dS�#2\u001c?ڼ�\u000b}8SC��v�`jT �v�/8�d��C���\u0017�辠��Y���Z)���z�\u001cV�E����\u000b��\u0018\"�\u001fn�-E�MsX\u0014c$���\nDEڤ$�)kx�\u0002�.��X(�;Ca�D�+���6�EDM����$���Q^u�g��(\u001e�\u0017N�$E\u0006\u0011��\u00131�b�kDD\u001c\u0011\u0000�\u0010س��;of]R&�I����>/ ��v#�?iA\u001a","url":"semicomplex"}]